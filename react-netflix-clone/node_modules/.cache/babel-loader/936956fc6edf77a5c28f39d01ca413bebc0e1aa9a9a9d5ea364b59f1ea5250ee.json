{"ast":null,"code":"var _jsxFileName = \"/Users/kimminseong/Desktop/ReactStudy/react-netflix-clone/src/components/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row(_ref) {\n  _s();\n  let {\n    isLargeRow,\n    title,\n    id,\n    fetchUrl\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetchMovieData();\n  }, []);\n  const fetchMovieData = async () => {\n    const request = await axios.get(fetchUrl);\n    setMovies(request.data.results);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"arrow\",\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: id,\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row__poster ${isLargeRow && \"new__posterLarge\"}`,\n        src: `https://image.tmdb.org/t/p/original/${isLargeRow ? movie.poster_path : movie.backdrop_path} `,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider__arrow-right\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Row","_ref","_s","isLargeRow","title","id","fetchUrl","movies","setMovies","fetchMovieData","request","get","data","results","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","movie","src","poster_path","backdrop_path","alt","name","_c","$RefreshReg$"],"sources":["/Users/kimminseong/Desktop/ReactStudy/react-netflix-clone/src/components/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from '../api/axios';\n\nexport default function Row({isLargeRow, title, id, fetchUrl}) {\n    \n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        fetchMovieData();\n\n    }, []);\n    \n    const fetchMovieData = async () => {\n        const request = await axios.get(fetchUrl);\n        setMovies(request.data.results)\n    };\n\n    return (\n        <section>\n            <h2>{title}</h2>\n            <div className='slider'>\n                <span className=\"arrow\">{\"<\"}</span> \n            </div>\n\n            <div id={id} className=\"row__posters\">\n                {movies.map(movie => (\n                    <img\n                        key={movie.id}\n                        className={`row__poster ${isLargeRow && \"new__posterLarge\"}`}\n                        src={`https://image.tmdb.org/t/p/original/${\n                            isLargeRow ? movie.poster_path : movie.backdrop_path\n                        } `}\n                        alt={movie.name}\n                    />\n                ))}\n            </div>\n            <div className='slider__arrow-right'>\n                <span className='arrow'>\n                \n                </span>\n            </div>\n        </section>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,GAAGA,CAAAC,IAAA,EAAoC;EAAAC,EAAA;EAAA,IAAnC;IAACC,UAAU;IAAEC,KAAK;IAAEC,EAAE;IAAEC;EAAQ,CAAC,GAAAL,IAAA;EAEzD,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZc,cAAc,CAAC,CAAC;EAEpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,OAAO,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACL,QAAQ,CAAC;IACzCE,SAAS,CAACE,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;EACnC,CAAC;EAED,oBACId,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAKV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBnB,OAAA;MAAKoB,SAAS,EAAC,QAAQ;MAAAL,QAAA,eACnBf,OAAA;QAAMoB,SAAS,EAAC,OAAO;QAAAL,QAAA,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAENnB,OAAA;MAAKM,EAAE,EAAEA,EAAG;MAACc,SAAS,EAAC,cAAc;MAAAL,QAAA,EAChCP,MAAM,CAACa,GAAG,CAACC,KAAK,iBACbtB,OAAA;QAEIoB,SAAS,EAAG,eAAchB,UAAU,IAAI,kBAAmB,EAAE;QAC7DmB,GAAG,EAAG,uCACFnB,UAAU,GAAGkB,KAAK,CAACE,WAAW,GAAGF,KAAK,CAACG,aAC1C,GAAG;QACJC,GAAG,EAAEJ,KAAK,CAACK;MAAK,GALXL,KAAK,CAAChB,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMhB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNnB,OAAA;MAAKoB,SAAS,EAAC,qBAAqB;MAAAL,QAAA,eAChCf,OAAA;QAAMoB,SAAS,EAAC;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB;AAAChB,EAAA,CAxCuBF,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}