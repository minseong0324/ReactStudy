{"ast":null,"code":"var _jsxFileName = \"/Users/kimminseong/Desktop/ReactStudy/react-netflix-clone/src/pages/SearchPage/index.js\",\n  _s2 = $RefreshSig$();\nimport axios from '../../api/axios';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDebounce } from '../../hooks/useDebounce'; // useDebounce 커스텀 훅을 불러옵니다.\nimport \"./SearchPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchPage() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [searchResults, setSearchResults] = useState([]);\n  const useQuery = () => {\n    _s();\n    return new URLSearchParams(useLocation().search);\n  };\n  _s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n    return [useLocation];\n  });\n  let query = useQuery();\n  const searchTerm = query.get(\"q\");\n  const debouncedSearchTerm = useDebounce(searchTerm, 500); // 검색어를 500ms 간격으로 디바운스 합니다.\n\n  console.log('searchTerm', searchTerm);\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      // 디바운스된 검색어가 있을 경우\n      fetchSearchMovie(debouncedSearchTerm); // 디바운스된 검색어를 이용해 영화를 검색합니다.\n    }\n  }, [debouncedSearchTerm]);\n  const fetchSearchMovie = async searchTerm => {\n    try {\n      const request = await axios.get(`/search/multi?include_adult=false&query=${searchTerm}`);\n      console.log(request);\n      setSearchResults(request.data.results);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n  const renderSearchResults = () => {\n    return searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"search-container\",\n      children: searchResults.map(movie => {\n        if (movie.backdrop_path !== null && movie.media_type !== \"person\") {\n          const movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie__column-poster\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: movieImageUrl,\n                alt: \"movie\",\n                className: \"movie__poster\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"no-results\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results__text\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uCC3E\\uACE0\\uC790 \\uD558\\uB294 \\uAC80\\uC0C9\\uC5B4\\\"\", debouncedSearchTerm, \"\\\"\\uC5D0 \\uB9DE\\uB294 \\uC601\\uD654\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  };\n  return renderSearchResults();\n}\n_s2(SearchPage, \"RZF9D6CdnQ+zPz/vY1c2R7RQwy8=\", true, function () {\n  return [useDebounce];\n});\n_c = SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["axios","React","useEffect","useState","useLocation","useDebounce","jsxDEV","_jsxDEV","SearchPage","_s2","_s","$RefreshSig$","searchResults","setSearchResults","useQuery","URLSearchParams","search","query","searchTerm","get","debouncedSearchTerm","console","log","fetchSearchMovie","request","data","results","error","renderSearchResults","length","className","children","map","movie","backdrop_path","media_type","movieImageUrl","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/kimminseong/Desktop/ReactStudy/react-netflix-clone/src/pages/SearchPage/index.js"],"sourcesContent":["import axios from '../../api/axios';\nimport React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useDebounce } from '../../hooks/useDebounce'; // useDebounce 커스텀 훅을 불러옵니다.\nimport \"./SearchPage.css\"\n\nexport default function SearchPage() {\n\n    const [searchResults, setSearchResults] = useState([]);\n\nconst useQuery =() => {\n    return new URLSearchParams(useLocation().search)\n}\n\nlet query = useQuery();\nconst searchTerm = query.get(\"q\")\nconst debouncedSearchTerm = useDebounce(searchTerm, 500); // 검색어를 500ms 간격으로 디바운스 합니다.\n\nconsole.log('searchTerm',searchTerm);\n\nuseEffect(() => {\n    if(debouncedSearchTerm) { // 디바운스된 검색어가 있을 경우\n        fetchSearchMovie(debouncedSearchTerm); // 디바운스된 검색어를 이용해 영화를 검색합니다.\n    }\n}, [debouncedSearchTerm]);\n\nconst fetchSearchMovie = async (searchTerm) => {\n    try {\n        const request = await axios.get(\n            `/search/multi?include_adult=false&query=${searchTerm}`\n        )\n        console.log(request);\n        setSearchResults(request.data.results);\n    } catch (error) {\n        console.log(\"error\", error)\n    }\n}\n\nconst renderSearchResults = () => {\n    return searchResults.length > 0 ? (\n        <section className=\"search-container\">\n            {searchResults.map((movie) => {\n                if(movie.backdrop_path !== null && movie.media_type !== \"person\") {\n                    const movieImageUrl = \n                    \"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path\n                    return(\n                        <div className='movie' key = {movie.id}>\n                            <div\n                            className=\"movie__column-poster\"\n                            >\n                                <img\n                                src={movieImageUrl} alt=\"movie\"\n                                className='movie__poster'\n                                />\n                            </div>\n                        </div>\n                    )\n                }\n            })}\n        </section>\n    ) : (\n        <section className='no-results'>\n            <div className='no-results__text'>\n                <p>찾고자 하는 검색어\"{debouncedSearchTerm}\"에 맞는 영화가 없습니다.</p>\n            </div>\n        </section>\n    )\n\n}\nreturn renderSearchResults();\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}