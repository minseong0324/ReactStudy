{"ast":null,"code":"var _jsxFileName = \"/Users/kimminseong/Desktop/ReactStudy/react-netflix-clone/src/components/Banner.js\",\n  _s = $RefreshSig$();\nimport axios from '../api/axios';\nimport React, { useEffect, useState } from 'react';\nimport requests from '../api/requests';\nimport \"./Banner.css\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Banner() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [isClicked, setisClicked] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    //현재 상영중인 영화 정보를 가져오기(여러 영화)\n    const request = await axios.get(requests.fetchNowPlaying);\n\n    //여러 영화 중 영화 하나의 ID를 가져오기\n    const movieId = request.data.results[Math.floor(Math.random() * request.data.results.length)].id;\n\n    //특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\n    const {\n      data: movieDetail\n    } = await axios.get(`movie/${movieId}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    });\n    setMovie(movieDetail);\n  };\n  const truncate = (str, n) => {\n    return (str === null || str === void 0 ? void 0 : str.length) > n ? str.substr(0, n - 1) + \"...\" : str;\n  };\n  if (!isClicked) {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"banner\",\n      style: {\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n        backgroundPosition: \"top center\",\n        backgroundSize: \"cover\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner__contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner__title\",\n          children: movie.title || movie.name || movie.orginal_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banner__buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button play\",\n            onClick: () => setisClicked(true),\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button info\",\n            children: \"More Imfomation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner__description\",\n          children: truncate(movie.overview, 100)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner--fadeBottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  } else {\n    // 만약 isClicked면\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"clicked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Banner, \"hkWF6h/Z4yW+ztwOqE/oiPhZBws=\");\n_c = Banner;\nconst Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    width: 100%;\n    height: 100vh;\n`;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["axios","React","useEffect","useState","requests","styled","jsxDEV","_jsxDEV","Banner","_s","movie","setMovie","isClicked","setisClicked","fetchData","request","get","fetchNowPlaying","movieId","data","results","Math","floor","random","length","id","movieDetail","params","append_to_response","truncate","str","n","substr","className","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","children","title","name","orginal_name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","overview","_c","Container","div","$RefreshReg$"],"sources":["/Users/kimminseong/Desktop/ReactStudy/react-netflix-clone/src/components/Banner.js"],"sourcesContent":["import axios from '../api/axios';\nimport React, { useEffect, useState } from 'react'\nimport requests from '../api/requests';\nimport \"./Banner.css\"\nimport styled from 'styled-components';\n\n\nexport default function Banner() {\n    const [movie, setMovie] = useState([]);\n    const [isClicked, setisClicked] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        //현재 상영중인 영화 정보를 가져오기(여러 영화)\n        const request = await axios.get(requests.fetchNowPlaying);\n        \n        //여러 영화 중 영화 하나의 ID를 가져오기\n        const movieId = request.data.results[\n            Math.floor(Math.random() * request.data.results.length)\n        ].id;\n\n        //특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\n        const {data: movieDetail} = await axios.get(`movie/${movieId}`, {\n            params: { append_to_response: \"videos\" },\n        });\n        setMovie(movieDetail);\n    };\n\n    const truncate = (str, n) => {\n        return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\n    };\n\n    if(!isClicked) {\n        return (\n            <header \n                className=\"banner\"\n                style = {{\n                    backgroundImage : `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n                    backgroundPosition: \"top center\",\n                    backgroundSize: \"cover\",\n                }}\n            >\n    \n                <div className='banner__contents'>\n                    <h1 className=\"banner__title\">\n                        {movie.title || movie.name || movie.orginal_name}\n                    </h1>\n                \n                    <div className='banner__buttons'>\n                        <button className='banner__button play' \n                        onClick={() => setisClicked(true)}>Play</button>\n                        <button className='banner__button info'>More Imfomation</button>\n                    </div>\n    \n                    <h1 className='banner__description'>{truncate(movie.overview, 100)}</h1>\n                </div>\n                <div className=\"banner--fadeBottom\" />\n            </header>\n        );\n    } else { // 만약 isClicked면\n        return(\n            <div>\n                clicked\n            </div>\n        )\n    }\n}\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    width: 100%;\n    height: 100vh;\n`"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}