{"ast":null,"code":"var _jsxFileName = \"/Users/kimminseong/Desktop/ReactStudy/react-netflix-clone/src/components/Nav.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"./Nav.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Nav() {\n  _s();\n  const [show, setShow] = useState(false);\n  const [searchValue, setSearchValue] = useState(); //useState를 생성해준다.\n  const navigate = useNavigate();\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      console.log('window.scrollY', window.scrollY);\n      if (window.scrollY > 50) {\n        setShow(true);\n      } else {\n        setShow(false);\n      }\n    });\n    return () => {\n      window.removeEventListener(\"scroll\", () => {});\n    };\n  }, []);\n  const handleChange = e => {\n    //검섹창에 무언가를 칠 때마다 url주소창에 바로 반영이 된다.\n    setSearchValue(e.target.value);\n    navigate(`/search?q=${e.target.value}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `nav ${show && \"nav__black\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"Netflix logo\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/400px-Netflix_2015_logo.svg.png\",\n      className: \"nav__logo\",\n      onClick: () => window.location.reload()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: searchValue,\n      onChange: handleChange,\n      className: \"nav__input\",\n      type: \"text\",\n      placeholder: \"\\uC601\\uD654\\uB97C \\uAC80\\uC0C9\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"User logged\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png?20201013161117\",\n      className: \"nav__avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Nav, \"p6uWUjphWc4Z0Mt2Ua8+8IlpjII=\", false, function () {\n  return [useNavigate];\n});\n_c = Nav;\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Nav","_s","show","setShow","searchValue","setSearchValue","navigate","window","addEventListener","console","log","scrollY","removeEventListener","handleChange","e","target","value","className","children","alt","src","onClick","location","reload","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/kimminseong/Desktop/ReactStudy/react-netflix-clone/src/components/Nav.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport \"./Nav.css\"\nexport default function Nav() {\n    const [show, setShow] = useState(false);\n    const [searchValue, setSearchValue] = useState(); //useState를 생성해준다.\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            console.log('window.scrollY',window.scrollY);\n            if(window.scrollY > 50) {\n                setShow(true);\n            } else {\n                setShow(false);\n            }\n        })\n\n        return () => {\n            window.removeEventListener(\"scroll\", () => {});\n        };\n    }, []);\n    \n\n    const handleChange = (e) => { //검섹창에 무언가를 칠 때마다 url주소창에 바로 반영이 된다.\n        setSearchValue(e.target.value);\n        navigate(`/search?q=${e.target.value}`)\n    }\n\n    return (\n        <nav className={`nav ${show && \"nav__black\"}`}>\n            <img\n                alt='Netflix logo'\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/400px-Netflix_2015_logo.svg.png\"\n                className='nav__logo'\n                onClick={() => window.location.reload()}\n            />\n\n        <input \n        value={searchValue} \n        onChange={handleChange} \n        className=\"nav__input\"\n        type=\"text\"\n        placeholder='영화를 검색해주세요.'\n        />\n\n            <img\n                alt=\"User logged\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png?20201013161117\"\n                className='nav__avatar'\n            />\n        </nav>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAClB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZY,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAM;MACpCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAACH,MAAM,CAACI,OAAO,CAAC;MAC5C,IAAGJ,MAAM,CAACI,OAAO,GAAG,EAAE,EAAE;QACpBR,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,MAAM;QACHA,OAAO,CAAC,KAAK,CAAC;MAClB;IACJ,CAAC,CAAC;IAEF,OAAO,MAAM;MACTI,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;IAClD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAAE;IAC1BT,cAAc,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9BV,QAAQ,CAAE,aAAYQ,CAAC,CAACC,MAAM,CAACC,KAAM,EAAC,CAAC;EAC3C,CAAC;EAED,oBACIjB,OAAA;IAAKkB,SAAS,EAAG,OAAMf,IAAI,IAAI,YAAa,EAAE;IAAAgB,QAAA,gBAC1CnB,OAAA;MACIoB,GAAG,EAAC,cAAc;MAClBC,GAAG,EAAC,iHAAiH;MACrHH,SAAS,EAAC,WAAW;MACrBI,OAAO,EAAEA,CAAA,KAAMd,MAAM,CAACe,QAAQ,CAACC,MAAM,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eAEN5B,OAAA;MACAiB,KAAK,EAAEZ,WAAY;MACnBwB,QAAQ,EAAEf,YAAa;MACvBI,SAAS,EAAC,YAAY;MACtBY,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC;IAAa;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAEE5B,OAAA;MACIoB,GAAG,EAAC,aAAa;MACjBC,GAAG,EAAC,uFAAuF;MAC3FH,SAAS,EAAC;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC1B,EAAA,CAlDuBD,GAAG;EAAA,QAGNH,WAAW;AAAA;AAAAkC,EAAA,GAHR/B,GAAG;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}