{"ast":null,"code":"var _jsxFileName = \"/Users/kimminseong/Desktop/ReactStudy/react-netflix-clone/src/components/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../api/axios';\nimport MovieModal from \"./MovieModal\";\nimport \"./Row.css\";\nimport { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport 'swiper/css/scrollbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row(_ref) {\n  _s();\n  let {\n    isLargeRow,\n    title,\n    id,\n    fetchUrl\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [movieSelected, setMovieSelected] = useState({});\n  useEffect(() => {\n    fetchMovieData();\n  }, []);\n  const fetchMovieData = async () => {\n    const request = await axios.get(fetchUrl);\n    setMovies(request.data.results);\n  };\n  const handleClick = movie => {\n    setModalOpen(true);\n    setMovieSelected(movie);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n      modules: [Navigation, Pagination, Scrollbar, A11y],\n      navigation: true,\n      pagination: {\n        clickable: true\n      },\n      loop: true,\n      breakpoints: {\n        1378: {\n          slidesPerView: 6,\n          slidesPerGroup: 6\n        },\n        998: {\n          slidesPerView: 5,\n          slidesPerGroup: 5\n        },\n        625: {\n          slidesPerView: 4,\n          slidesPerGroup: 4\n        },\n        0: {\n          slidesPerView: 3,\n          slidesPerGroup: 3\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: id,\n        className: \"row__posters\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: `row__poster ${isLargeRow && \"new__posterLarge\"}`,\n            src: `https://image.tmdb.org/t/p/original/${isLargeRow ? movie.poster_path : movie.backdrop_path} `,\n            alt: movie.name,\n            onClick: () => handleClick(movie)\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(MovieModal, {\n      ...movieSelected,\n      setModalOpen: setModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Row, \"ARRKMuuqd4hR7xc6n0m8gpcgRM8=\");\n_c = Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieModal","Navigation","Pagination","Scrollbar","A11y","Swiper","SwiperSlide","jsxDEV","_jsxDEV","Row","_ref","_s","isLargeRow","title","id","fetchUrl","movies","setMovies","modalOpen","setModalOpen","movieSelected","setMovieSelected","fetchMovieData","request","get","data","results","handleClick","movie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","modules","navigation","pagination","clickable","loop","breakpoints","slidesPerView","slidesPerGroup","map","src","poster_path","backdrop_path","alt","name","onClick","_c","$RefreshReg$"],"sources":["/Users/kimminseong/Desktop/ReactStudy/react-netflix-clone/src/components/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from '../api/axios';\nimport MovieModal from \"./MovieModal\";\nimport \"./Row.css\";\n\nimport { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport 'swiper/css/scrollbar';\n\n\n\nexport default function Row({isLargeRow, title, id, fetchUrl}) {\n    \n    const [movies, setMovies] = useState([]);\n\n    const [modalOpen, setModalOpen] = useState(false);\n\n    const [movieSelected, setMovieSelected] = useState({});\n\n    useEffect(() => {\n        fetchMovieData();\n\n    }, []);\n    \n    const fetchMovieData = async () => {\n        const request = await axios.get(fetchUrl);\n        setMovies(request.data.results)\n    };\n\n    const handleClick = (movie) => {\n        setModalOpen(true) \n        setMovieSelected(movie); \n    };\n\n    return (\n        <section className='row'>\n            <h2>{title}</h2>\n            <Swiper\n                modules={[Navigation, Pagination, Scrollbar, A11y]}\n                navigation\n                pagination={{ clickable: true }}\n                loop={true}\n                breakpoints={{\n                    1378: {\n                        slidesPerView: 6,\n                        slidesPerGroup: 6,\n                    },\n                    998: {\n                        slidesPerView: 5,\n                        slidesPerGroup: 5,\n                    },\n                    625: {\n                        slidesPerView: 4,\n                        slidesPerGroup: 4,\n                    },\n                    0: {\n                        slidesPerView: 3,\n                        slidesPerGroup: 3,\n                    },\n                }}\n            >\n            \n\n            <div id={id} className=\"row__posters\">\n                {movies.map(movie => (\n                    <SwiperSlide>\n                        <img\n                            key={movie.id}\n                            className={`row__poster ${isLargeRow && \"new__posterLarge\"}`}\n                            src={`https://image.tmdb.org/t/p/original/${\n                                isLargeRow ? movie.poster_path : movie.backdrop_path\n                            } `}\n                            alt={movie.name}\n                            onClick={() => handleClick(movie)} \n                        />\n                    </SwiperSlide>\n                ))}\n            </div>\n        </Swiper>\n\n            {\n                modalOpen && (\n                    <MovieModal {...movieSelected} setModalOpen={setModalOpen}/> \n                )\n            }\n\n        </section>\n        \n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}