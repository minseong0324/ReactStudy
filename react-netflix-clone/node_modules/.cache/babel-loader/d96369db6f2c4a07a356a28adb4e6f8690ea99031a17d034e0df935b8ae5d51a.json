{"ast":null,"code":"import _slicedToArray from\"/Users/kimminseong/Desktop/ReactStudy/react-netflix-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import\"./Nav.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Nav(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),searchValue=_useState4[0],setSearchValue=_useState4[1];//useState를 생성해준다.\nvar navigate=useNavigate();useEffect(function(){window.addEventListener(\"scroll\",function(){console.log('window.scrollY',window.scrollY);if(window.scrollY>50){setShow(true);}else{setShow(false);}});return function(){window.removeEventListener(\"scroll\",function(){});};},[]);var handleChange=function handleChange(e){//검섹창에 무언가를 칠 때마다 url주소창에 바로 반영이 된다.\nsetSearchValue(e.target.value);navigate(\"/search?q=\".concat(e.target.value));};return/*#__PURE__*/_jsxs(\"nav\",{className:\"nav \".concat(show&&\"nav__black\"),children:[/*#__PURE__*/_jsx(\"img\",{alt:\"Netflix logo\",src:\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/400px-Netflix_2015_logo.svg.png\",className:\"nav__logo\",onClick:function onClick(){return window.location.reload();}}),/*#__PURE__*/_jsx(\"input\",{value:searchValue,onChange:handleChange,className:\"nav__input\",type:\"text\",placeholder:\"\\uC601\\uD654\\uB97C \\uAC80\\uC0C9\\uD574\\uC8FC\\uC138\\uC694.\"}),/*#__PURE__*/_jsx(\"img\",{alt:\"User logged\",src:\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png?20201013161117\",className:\"nav__avatar\"})]});}","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Nav","_useState","_useState2","_slicedToArray","show","setShow","_useState3","_useState4","searchValue","setSearchValue","navigate","window","addEventListener","console","log","scrollY","removeEventListener","handleChange","e","target","value","concat","className","children","alt","src","onClick","location","reload","onChange","type","placeholder"],"sources":["/Users/kimminseong/Desktop/ReactStudy/react-netflix-clone/src/components/Nav.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport \"./Nav.css\"\nexport default function Nav() {\n    const [show, setShow] = useState(false);\n    const [searchValue, setSearchValue] = useState(); //useState를 생성해준다.\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            console.log('window.scrollY',window.scrollY);\n            if(window.scrollY > 50) {\n                setShow(true);\n            } else {\n                setShow(false);\n            }\n        })\n\n        return () => {\n            window.removeEventListener(\"scroll\", () => {});\n        };\n    }, []);\n    \n\n    const handleChange = (e) => { //검섹창에 무언가를 칠 때마다 url주소창에 바로 반영이 된다.\n        setSearchValue(e.target.value);\n        navigate(`/search?q=${e.target.value}`)\n    }\n\n    return (\n        <nav className={`nav ${show && \"nav__black\"}`}>\n            <img\n                alt='Netflix logo'\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/400px-Netflix_2015_logo.svg.png\"\n                className='nav__logo'\n                onClick={() => window.location.reload()}\n            />\n\n        <input \n        value={searchValue} \n        onChange={handleChange} \n        className=\"nav__input\"\n        type=\"text\"\n        placeholder='영화를 검색해주세요.'\n        />\n\n            <img\n                alt=\"User logged\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png?20201013161117\"\n                className='nav__avatar'\n            />\n        </nav>\n    )\n}\n"],"mappings":"+IAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,WAAW,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAClB,cAAe,SAAS,CAAAC,GAAGA,CAAA,CAAG,CAC1B,IAAAC,SAAA,CAAwBP,QAAQ,CAAC,KAAK,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAhCG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,IAAAI,UAAA,CAAsCZ,QAAQ,CAAC,CAAC,CAAAa,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAzCE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAAgB;AAClD,GAAM,CAAAG,QAAQ,CAAGf,WAAW,CAAC,CAAC,CAE9BF,SAAS,CAAC,UAAM,CACZkB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,CAAE,UAAM,CACpCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAACH,MAAM,CAACI,OAAO,CAAC,CAC5C,GAAGJ,MAAM,CAACI,OAAO,CAAG,EAAE,CAAE,CACpBV,OAAO,CAAC,IAAI,CAAC,CACjB,CAAC,IAAM,CACHA,OAAO,CAAC,KAAK,CAAC,CAClB,CACJ,CAAC,CAAC,CAEF,MAAO,WAAM,CACTM,MAAM,CAACK,mBAAmB,CAAC,QAAQ,CAAE,UAAM,CAAC,CAAC,CAAC,CAClD,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAGN,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,CAAC,CAAK,CAAE;AAC1BT,cAAc,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC9BV,QAAQ,cAAAW,MAAA,CAAcH,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAAC,CAC3C,CAAC,CAED,mBACIrB,KAAA,QAAKuB,SAAS,QAAAD,MAAA,CAASjB,IAAI,EAAI,YAAY,CAAG,CAAAmB,QAAA,eAC1C1B,IAAA,QACI2B,GAAG,CAAC,cAAc,CAClBC,GAAG,CAAC,iHAAiH,CACrHH,SAAS,CAAC,WAAW,CACrBI,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAf,MAAM,CAACgB,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAC,CAC3C,CAAC,cAEN/B,IAAA,UACAuB,KAAK,CAAEZ,WAAY,CACnBqB,QAAQ,CAAEZ,YAAa,CACvBK,SAAS,CAAC,YAAY,CACtBQ,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,0DAAa,CACxB,CAAC,cAEElC,IAAA,QACI2B,GAAG,CAAC,aAAa,CACjBC,GAAG,CAAC,uFAAuF,CAC3FH,SAAS,CAAC,aAAa,CAC1B,CAAC,EACD,CAAC,CAEd"},"metadata":{},"sourceType":"module","externalDependencies":[]}